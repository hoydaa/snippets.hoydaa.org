sfGuardUser:
  umut.utkan:
    username:       umut.utkan
    password:       gahve123
    is_super_admin: true

Language:
  c:
    name: C
    tag: c
  java:
    name: Java
    tag: java
  php:
    name: Php
    tag: php
  xml:
    name: Xml
    tag: xml
    
Tag:
  j2me:
    tag: J2me
    tag_normalized: j2me
    popularity: 25
  j2ee:
    tag: j2ee
    tag_normalized: j2ee
    popularity: 11
  pattern:
    tag: patterns
    tag_normalized: patterns
    popularity: 20
  pdaapi:
    tag: pdaapi
    tag_normalized: pdaapi
    popularity: 30
  mysql:
    tag: mysql
    tag_normalized: mysql
    popularity: 23
  apache:
    tag: apache
    tag_normalized: apache
    popularity: 4
  gof:
    tag: gof
    tag_normalized: gof
    popularity: 10
    
Code:
  singleton:
    sf_guard_user_id: umut.utkan
    code: |
      <java-snippet>
      public class Singleton {
        // Protected constructor is sufficient to suppress unauthorized calls to the constructor
        protected Singleton() {}
 
        /**
         * SingletonHolder is loaded on the first execution of Singleton.getInstance() 
         * or the first access to SingletonHolder.instance , not before.
         */
        private static class SingletonHolder { 
          private final static Singleton instance = new Singleton();
        }
 
        public static Singleton getInstance() {
          return SingletonHolder.instance;
        }
      }
      </java-snippet>
    title: Singleton pattern
    description: Singleton pattern is a design pattern that is used to restrict instantiation of a class to one object.
    average_rating: 5.89
    
CodeTag:
  ctag1:
    code_id: singleton
    tag_id: pattern
  ctag2:
    code_id: singleton
    tag_id: gof